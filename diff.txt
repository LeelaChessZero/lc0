diff --git a/src/chess/uciloop.cc b/src/chess/uciloop.cc
index 4a11f8c..f1a621c 100644
--- a/src/chess/uciloop.cc
+++ b/src/chess/uciloop.cc
@@ -159,7 +159,7 @@ int GetNumeric(const std::unordered_map<std::string, std::string>& params,
 
 bool ContainsKey(const std::unordered_map<std::string, std::string>& params,
                  const std::string& key) {
-  return params.find(key) != params.end();
+  return params.contains(key);
 }
 }  // namespace
 
diff --git a/src/neural/backends/cuda/network_cuda.cc b/src/neural/backends/cuda/network_cuda.cc
index 29b9ed1..105ad6f 100644
--- a/src/neural/backends/cuda/network_cuda.cc
+++ b/src/neural/backends/cuda/network_cuda.cc
@@ -342,14 +342,14 @@ class CudaNetwork : public Network {
     std::string policy_head =
         options.GetOrDefault<std::string>("policy_head", "vanilla");
     // Check that selected policy head exists.
-    if (weights.policy_heads.count(policy_head) == 0) {
+    if (!weights.policy_heads.contains(policy_head)) {
       throw Exception("The policy head you specified '" + policy_head +
                       "' does not exist in this net.");
     }
     std::string value_head =
         options.GetOrDefault<std::string>("value_head", "winner");
     // Check that selected value head exists.
-    if (weights.value_heads.count(value_head) == 0) {
+    if (!weights.value_heads.contains(value_head)) {
       throw Exception("The value head you specified '" + value_head +
                       "' does not exist in this net.");
     }
diff --git a/src/neural/onnx/converter.cc b/src/neural/onnx/converter.cc
index 39aac80..1776124 100644
--- a/src/neural/onnx/converter.cc
+++ b/src/neural/onnx/converter.cc
@@ -921,7 +921,7 @@ void Converter::MakePolicyHead(pblczero::OnnxModel* onnx, OnnxBuilder* builder,
                                const std::string& input,
                                const MultiHeadWeights& weights) {
   // Check that selected policy head exists.
-  if (weights.policy_heads.count(options_.policy_head) == 0) {
+  if (!weights.policy_heads.contains(options_.policy_head)) {
     throw Exception("The policy head you specified '" + options_.policy_head +
                     "'" + " does not exist in this net.");
   }
@@ -989,7 +989,7 @@ void Converter::MakeValueHead(pblczero::OnnxModel* onnx, OnnxBuilder* builder,
                               const std::string& input,
                               const MultiHeadWeights& weights) {
   // Check that selected value head exists.
-  if (weights.value_heads.count(options_.value_head) == 0) {
+  if (!weights.value_heads.contains(options_.value_head)) {
     throw Exception("The value head you specified '" + options_.value_head +
                     "'" + " does not exist in this net.");
   }
diff --git a/src/neural/xla/hlo_builder.cc b/src/neural/xla/hlo_builder.cc
index 873d2d5..d018eb5 100644
--- a/src/neural/xla/hlo_builder.cc
+++ b/src/neural/xla/hlo_builder.cc
@@ -536,7 +536,7 @@ std::optional<HloComputation> HloBuilder::GetComputationId(
 HloComputation HloBuilder::AddComputation(std::string_view name,
                                           const HloBuilder& builder) {
   std::unordered_map<size_t, size_t> id_map;
-  if (computation_names_.count(std::string(name))) {
+  if (computation_names_.contains(std::string(name))) {
     throw Exception("Computation with name " + std::string(name) +
                     " already exists");
   }
diff --git a/src/neural/xla/onnx2hlo.cc b/src/neural/xla/onnx2hlo.cc
index 017618e..36f8009 100644
--- a/src/neural/xla/onnx2hlo.cc
+++ b/src/neural/xla/onnx2hlo.cc
@@ -660,7 +660,7 @@ class Onnx2HloConverter {
   bool AllInputsConstant(const pblczero::NodeProto& node) {
     for (const auto& input : node.input()) {
       const std::string name(input);
-      if (initializers_.count(name)) continue;
+      if (initializers_.contains(name)) continue;
       if (auto iter = onnx_name_to_hlo_flow_.find(name);
           iter != onnx_name_to_hlo_flow_.end() &&
           iter->second->opcode() == "constant") {
diff --git a/src/tools/onnx2leela.cc b/src/tools/onnx2leela.cc
index 562367f..4ebfb28 100644
--- a/src/tools/onnx2leela.cc
+++ b/src/tools/onnx2leela.cc
@@ -167,7 +167,7 @@ bool ValidateNetwork(const pblczero::Net& weights, pblczero::ModelProto& onnx) {
 
   auto check_exists = [](std::string_view n, std::set<std::string>* nodes) {
     std::string name(n);
-    if (nodes->count(name) == 0) {
+    if (!nodes->contains(name)) {
       CERR << "Node '" << name << "' doesn't exist in ONNX.";
       return false;
     }
diff --git a/src/utils/optionsdict.cc b/src/utils/optionsdict.cc
index b515914..1c820c5 100644
--- a/src/utils/optionsdict.cc
+++ b/src/utils/optionsdict.cc
@@ -74,7 +74,7 @@ std::vector<std::string> OptionsDict::ListSubdicts() const {
 }
 
 bool OptionsDict::HasSubdict(const std::string& name) const {
-  return subdicts_.find(name) != subdicts_.end();
+  return subdicts_.contains(name);
 }
 
 namespace {
